# Copyright (C) 2021-2022, Xilinx, Inc.
# Copyright (C) 2022-2023, Advanced Micro Devices, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Poetry Publish Production

on:
  workflow_dispatch:

  repository_dispatch:
    types: [manual-trigger]
    # TO TEST WORKFLOW MANUALLY:
    # curl -X POST -H "Authorization: token ${GITHUB_TOKEN}" -H "Accept: application/vnd.github.everest-preview+json" "https://api.github.com/repos/mikexilinx/chipscopy-copy/dispatches" -d '{"event_type": "manual-trigger"}'

  push:
    tags:
      - '*'

jobs:
  build:
    name: Build Package
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install Poetry
      run: pip install poetry

    - name: Install dependencies
      run: poetry install

    - name: Build package
      run: poetry build

    - name: Upload built package
      uses: actions/upload-artifact@v2
      with:
        name: built-package
        path: dist/*

  publish-dry-run:
    name: Publish to PyPI (Publish)
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Download built package
      uses: actions/download-artifact@v2
      with:
        name: built-package
        path: dist

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install Poetry
      run: pip install poetry

    - name: Publish package (Production)
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        echo "TWINE_USERNAME length: ${#TWINE_USERNAME}"
        echo "TWINE_PASSWORD length: ${#TWINE_PASSWORD}"
        TAG=`awk '/^version = / {print $NF}' pyproject.toml | tr -d '"'`
        echo "TAG: $TAG"
        git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
        git config --global user.name "$GITHUB_ACTOR"        
        git tag $TAG
        git push origin $TAG
        # Check if the git push was successful
        if [ $? -eq 0 ]; then
            echo "Git tag $TAG pushed successfully. Publishing to PyPI."
            poetry config http-basic.pypi "$TWINE_USERNAME" "$TWINE_PASSWORD"
            poetry publish --username "$TWINE_USERNAME" --password "$TWINE_PASSWORD"
        else
            echo "Failed to push Git tag $TAG. Aborting PyPI publish."
            exit 1
        fi
